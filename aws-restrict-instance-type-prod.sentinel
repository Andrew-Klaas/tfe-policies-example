import "tfplan"

# Get all AWS instances from all modules - more robust for real-world use, but not
# supported by Sentinel's current testing features.
# get_aws_instances = func() {
#     instances = []
#     for tfplan.module_paths as path {
#         instances += values(tfplan.module(path).resources.aws_instance) else []
#     }
#     return instances
# }

# Get all AWS instances in the root module only:
get_aws_instances = func() {
	instances = values(tfplan.resources.aws_instance) else []
	return instances
}

# Allowed Types
allowed_types = [
	"t2.small",
	"t2.medium",
	"t2.large",
	"t2.xlarge",
	"m4.large",
	"m4.xlarge",
]

aws_instances = get_aws_instances()

# Rule to restrict instance types
instance_type_allowed = rule {
	all aws_instances as _index, instances {
		all instances as _count, r {
			r.applied.instance_type in allowed_types
		}
	}
}

# Main rule that requires other rules to be true
main = rule {
	(instance_type_allowed) else true
}