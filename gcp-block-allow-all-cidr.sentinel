import "tfplan"

# Get an array of resource bodies of the given type (each body indexed by count),
# collected from all modules. (Returns an empty array if none found).
# Outline of structure:
# [ {"0": {"applied": {"instance_type": "..."}, "diff": {...}}, "1": {...}},
#   {"0": {...}},
#   ... ]
get_resources = func(type) {
	instances = []
	if length(tfplan.module_paths else []) > 0 { # always true in the real tfplan import
		for tfplan.module_paths as path {
			instances += values(tfplan.module(path).resources[type]) else []
		}
	} else { # fallback for tests
		instances += values(tfplan.resources[type]) else []
	}
	return instances
}

disallowed_cidr_block = "0.0.0.0/0"

firewalls = get_resources("google_compute_firewall")

block_allow_all = rule {
	all firewalls as _index, instances {
		all instances as _count, fw {
			disallowed_cidr_block not in fw.applied.source_ranges[0]
		}
	}
}

main = rule {
	(block_allow_all) else true
}